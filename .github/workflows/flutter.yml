name: Build

on:
  push:
    branches:
      - main

env:
  FLUTTER_CHANNEL: "stable"
  PROPERTIES_PATH: "./android/key.properties"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Setup Java environment in order to build the Android app.
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'

      # Gradle cache for faster builds
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      
      - run: |
          echo storePassword=${{ secrets.STORE_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyPassword=${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
          echo keyAlias=${{ secrets.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
          echo storeFile=/home/runner/work/Mystic/Mystic/android/app/keystore.jks >> ${{env.PROPERTIES_PATH}}
          echo ${{ secrets.KEYSTORE }} | base64 --decode > /home/runner/work/Mystic/Mystic/android/app/keystore.jks

      # Get flutter dependencies.
      - run: flutter pub get

      # Build apk.
      - run: flutter build apk --release --split-per-abi

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: Mystic-arm64-v8a-release.apk
          path: build/app/outputs/apk/release/app-arm64-v8a-release.apk

      - uses: actions/upload-artifact@v3
        with:
          name: Mystic-armeabi-v7a-release.apk
          path: build/app/outputs/apk/release/app-armeabi-v7a-release.apk
